/* FILE:    HCMAX7219.h
   DATE:    26/03/15
   VERSION: 0.2
   AUTHOR:  Andrew Davies
   
11/03/15 version 0.1: Original version
13/04/15 version 0.2: Updated timings to work with 1.x.x versions of Arduino IDE

Library for WS2812 serial RGB LEDs.
You may copy, alter and reuse this code in any way you like, but please leave
reference to HobbyComponents.com in your comments if you redistribute this code.
This software may not be used directly for the purpose of selling products that
directly compete with Hobby Components Ltd's own range of products.
THIS SOFTWARE IS PROVIDED "AS IS". HOBBY COMPONENTS MAKES NO WARRANTIES, WHETHER
EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ACCURACY OR LACK OF NEGLIGENCE.
HOBBY COMPONENTS SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR ANY DAMAGES,
INCLUDING, BUT NOT LIMITED TO, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY
REASON WHATSOEVER.
*/

#ifndef HCWS2812_h
#define HCWS2812_h
#include "Arduino.h"

/***************************** USER CONFIGURATION ****************************/

/* CHANGE THIS VALUE TO MATCH THE NUMBER OF LEDS YOU WISH TO DRIVE.
   IF YOU ARE CONFIGUREING YOUR LEDS AS A MESSAGE DISPLAY THEN THIS NUMBER
   SHOULD BE AMULTIPLE OF 8 */

   #define NUMBEROFLEDS 200

/* IF YOU ARE NOT USING THE PRINT FUNCTIONS YOU CAN COMMENT OUT THE FOLLOWING
   LINE TO SAVE MEMORY */
   
   #define DOTMATRIX
   
/*****************************************************************************/
  
#if (ARDUINO < 110) // Settings for older version of Arduino IDE  
/* Settings for ATMega328P based Arduino's (Uno, Nano etc..) */
#if defined (__AVR_ATmega328P__)
#define HIGHDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")
#define HIGHDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n")
#define LOWDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n")
#define LOWDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")

/* PIN 8 */
#define DOUT_PIN 0x01 
#define DOUT_PORT PORTB
#define DOUT_DDR DDRB

/* Settings for ATMega2560 based Arduino's (Mega) */
#elif defined (__AVR_ATmega2560__)
#define HIGHDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n")
#define HIGHDELAYLOW __asm__ __volatile__ ("nop\n")
#define LOWDELAYHIGH __asm__ __volatile__ ("nop\n")
#define LOWDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n")

/* PIN 8 */
#define DOUT_PIN 0x20
#define DOUT_PORT PORTH
#define DOUT_DDR DDRH

/* Settings for ATmega32U4 based Arduino's. (Leonardo, 5V Pro Micro, etc..) */
#elif defined (__AVR_ATmega32U4__)
#define HIGHDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")
#define HIGHDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n")
#define LOWDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n")
#define LOWDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")

/* PIN 8 */
#define DOUT_PIN 0x10
#define DOUT_PORT PORTB
#define DOUT_DDR DDRB
#endif



#else // Settings for newer version of Arduino IDE (> 1.0.X)
#if defined (__AVR_ATmega328P__)
#define HIGHDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n")
#define HIGHDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n")
#define LOWDELAYHIGH __asm__ __volatile__ ("nop\n")
#define LOWDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")

/* PIN 8 */
#define DOUT_PIN 0x01 
#define DOUT_PORT PORTB
#define DOUT_DDR DDRB

/* Settings for ATMega2560 based Arduino's (Mega) */
#elif defined (__AVR_ATmega2560__)
#define HIGHDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n")
#define HIGHDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n")
#define LOWDELAYHIGH //__asm__ __volatile__ ("")
#define LOWDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")

/* PIN 8 */
#define DOUT_PIN 0x20
#define DOUT_PORT PORTH
#define DOUT_DDR DDRH

/* Settings for ATmega32U4 based Arduino's. (Leonardo, 5V Pro Micro, etc..) */
#elif defined (__AVR_ATmega32U4__)
#define HIGHDELAYHIGH __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n")
#define HIGHDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n")
//#define LOWDELAYHIGH __asm__ __volatile__ ("")
#define LOWDELAYLOW __asm__ __volatile__ ("nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n nop\n")

/* PIN 8 */
#define DOUT_PIN 0x10
#define DOUT_PORT PORTB
#define DOUT_DDR DDRB
#endif
#endif



#define GREEN 0
#define RED 1
#define BLUE 2

/* Bit mask for data driven to the LEDS */
#define BIT7 0x80
#define BIT6 0x40
#define BIT5 0x20
#define BIT4 0x10
#define BIT3 0x08
#define BIT2 0x04
#define BIT1 0x02
#define BIT0 0x01

/* Sets the digital pin high */
#define DOUT_HIGH DOUT_PORT |= DOUT_PIN
/* Sets the digital pin low */
#define DOUT_LOW DOUT_PORT &= ~DOUT_PIN

#define DISPLAYBUFFERSIZE NUMBEROFLEDS / 8

/* Font bit map */
#ifdef DOTMATRIX
const char Font8x8[][8] = 
{ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x00,0xF2,0xF2,0x00,0x00,0x00},
  {0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,0x00},
  {0x28,0xFE,0xFE,0x28,0x28,0xFE,0xFE,0x28},
  {0x00,0x24,0x74,0xD6,0xD6,0x5C,0x48,0x00},
  {0x00,0xC6,0xCC,0x18,0x30,0x66,0xC6,0x00},
  {0x00,0x4C,0xFE,0xB2,0xB2,0xEE,0x4E,0x0A},
  {0x00,0x00,0x00,0x20,0x60,0xC0,0x80,0x00},
  {0x00,0x00,0x38,0x7C,0xC6,0x82,0x00,0x00},
  {0x00,0x00,0x82,0xC6,0x7C,0x38,0x00,0x00},
  {0x10,0x54,0x7C,0x38,0x38,0x7C,0x54,0x10},
  {0x00,0x10,0x10,0x7C,0x7C,0x10,0x10,0x00},
  {0x00,0x00,0x01,0x07,0x06,0x00,0x00,0x00},
  {0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x00},
  {0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00},
  {0x00,0x02,0x06,0x0C,0x18,0x30,0x60,0x40},
  {0x00,0x7C,0xFE,0x92,0xA2,0xFE,0x7C,0x00},
  {0x00,0x02,0x22,0xFE,0xFE,0x02,0x02,0x00},
  {0x00,0x46,0xCE,0x8A,0x92,0xF2,0x62,0x00},
  {0x00,0x44,0xC6,0x92,0x92,0xFE,0x6C,0x00},
  {0x00,0x18,0x18,0x28,0x68,0xFE,0xFE,0x08},
  {0x00,0xE4,0xE6,0xA2,0xA2,0xBE,0x9C,0x00},
  {0x00,0x7C,0xFE,0x92,0x92,0xDE,0x4C,0x00},
  {0x00,0xC0,0xC0,0x9E,0xBE,0xE0,0xC0,0x00},
  {0x00,0x6C,0xFE,0x92,0x92,0xFE,0x6C,0x00},
  {0x00,0x64,0xF6,0x92,0x92,0xFE,0x7C,0x00},
  {0x00,0x00,0x00,0x24,0x24,0x00,0x00,0x00},
  {0x00,0x00,0x01,0x27,0x26,0x00,0x00,0x00},
  {0x00,0x10,0x38,0x6C,0xC6,0x82,0x82,0x00},
  {0x00,0x28,0x28,0x28,0x28,0x28,0x28,0x00},
  {0x00,0x82,0x82,0xC6,0x6C,0x38,0x10,0x00},
  {0x00,0x40,0xC0,0x8A,0x9A,0xF0,0x60,0x00},
  {0x00,0x7C,0xFE,0x82,0xB2,0xF2,0x74,0x00},
  {0x00,0x3E,0x7E,0xD0,0xD0,0x7E,0x3E,0x00},
  {0x00,0xFE,0xFE,0x92,0x92,0xFE,0x6C,0x00},
  {0x00,0x7C,0xFE,0x82,0x82,0xC6,0x44,0x00},
  {0x00,0xFE,0xFE,0x82,0xC6,0x7C,0x38,0x00},
  {0x00,0xFE,0xFE,0x92,0x92,0x82,0x82,0x00},
  {0x00,0xFE,0xFE,0x90,0x90,0x80,0x80,0x00},
  {0x00,0x7C,0xFE,0x82,0x92,0xDE,0x5C,0x00},
  {0x00,0xFE,0xFE,0x10,0x10,0xFE,0xFE,0x00},
  {0x00,0x00,0x82,0xFE,0xFE,0x82,0x00,0x00},
  {0x00,0x04,0x06,0x82,0xFE,0xFC,0x80,0x00},
  {0x00,0xFE,0xFE,0x38,0x6C,0xC6,0x82,0x00},
  {0x00,0xFE,0xFE,0x02,0x02,0x02,0x02,0x00},
  {0x00,0xFE,0xFE,0x60,0x30,0x60,0xFE,0xFE},
  {0x00,0xFE,0xFE,0x70,0x38,0xFE,0xFE,0x00},
  {0x00,0x7C,0xFE,0x82,0x82,0xFE,0x7C,0x00},
  {0x00,0xFE,0xFE,0x90,0x90,0xF0,0x60,0x00},
  {0x00,0x78,0xFC,0x84,0x86,0xFE,0x7A,0x00},
  {0x00,0xFE,0xFE,0x98,0x9C,0xF6,0x62,0x00},
  {0x00,0x64,0xF6,0x92,0x92,0xDE,0x4C,0x00},
  {0x00,0x80,0x80,0xFE,0xFE,0x80,0x80,0x00},
  {0x00,0xFC,0xFE,0x02,0x02,0xFE,0xFC,0x00},
  {0x00,0xF8,0xFC,0x06,0x06,0xFC,0xF8,0x00},
  {0x00,0xFE,0xFE,0x0C,0x18,0x0C,0xFE,0xFE},
  {0x00,0xC6,0xEE,0x38,0x38,0xEE,0xC6,0x00},
  {0x00,0xE0,0xF0,0x1E,0x1E,0xF0,0xE0,0x00},
  {0x00,0x86,0x8E,0x9A,0xB2,0xE2,0xC2,0x00},
  {0x00,0x00,0xFE,0xFE,0x82,0x82,0x00,0x00},
  {0x00,0x40,0x60,0x30,0x18,0x0C,0x06,0x02},
  {0x00,0x00,0x82,0x82,0xFE,0xFE,0x00,0x00},
  {0x00,0x18,0x30,0x60,0xC0,0x60,0x30,0x18},
  {0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01},
  {0x00,0x00,0x80,0x40,0x20,0x00,0x00,0x00},
  {0x00,0x04,0x2E,0x2A,0x2A,0x3E,0x1E,0x00},
  {0x00,0x7E,0x7E,0x12,0x12,0x1E,0x0C,0x00},
  {0x00,0x1C,0x3E,0x22,0x22,0x22,0x00,0x00},
  {0x00,0x0C,0x1E,0x12,0x12,0x7E,0x7E,0x00},
  {0x00,0x1C,0x3E,0x2A,0x2A,0x3A,0x18,0x00},
  {0x00,0x10,0x3E,0x7E,0x50,0x50,0x00,0x00},
  {0x00,0x19,0x3D,0x25,0x25,0x3F,0x3E,0x00},
  {0x00,0x7E,0x7E,0x10,0x10,0x1E,0x0E,0x00},
  {0x00,0x00,0x12,0x5E,0x5E,0x02,0x00,0x00},
  {0x00,0x00,0x01,0x01,0x01,0x5F,0x5E,0x00},
  {0x00,0x7E,0x7E,0x08,0x1C,0x16,0x02,0x00},
  {0x00,0x00,0x42,0x7E,0x7E,0x02,0x00,0x00},
  {0x00,0x3E,0x3E,0x18,0x1C,0x38,0x3E,0x1E},
  {0x00,0x3E,0x3E,0x20,0x20,0x3E,0x1E,0x00},
  {0x00,0x1C,0x3E,0x22,0x22,0x3E,0x1C,0x00},
  {0x00,0x3F,0x3F,0x24,0x24,0x3C,0x18,0x00},
  {0x00,0x18,0x3C,0x24,0x24,0x3F,0x3F,0x00},
  {0x00,0x3E,0x3E,0x20,0x20,0x30,0x10,0x00},
  {0x00,0x12,0x3A,0x2A,0x2A,0x2E,0x24,0x00},
  {0x00,0x20,0x20,0x7C,0x7E,0x22,0x22,0x00},
  {0x00,0x3C,0x3E,0x02,0x02,0x3E,0x3E,0x00},
  {0x00,0x38,0x3C,0x06,0x06,0x3C,0x38,0x00},
  {0x00,0x38,0x3E,0x0E,0x1C,0x0E,0x3E,0x38},
  {0x00,0x22,0x36,0x1C,0x1C,0x36,0x22,0x00},
  {0x00,0x39,0x3D,0x05,0x07,0x3E,0x3C,0x00},
  {0x00,0x22,0x26,0x2E,0x3A,0x32,0x22,0x00},
  {0x00,0x00,0x10,0x7C,0xEE,0x82,0x00,0x00},
  {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},
  {0x00,0x00,0x82,0xEE,0x7C,0x10,0x00,0x00},
  {0x00,0x08,0x10,0x10,0x18,0x08,0x08,0x10}
};
#endif

extern byte RGBBuffer[3][NUMBEROFLEDS];

class HCWS2812
{
  public:
  HCWS2812(void);
  void ClearBuffer(void);
#ifdef DOTMATRIX
  void print(char TextString[], unsigned int Offset);
  void print(long number, unsigned int Offset);
  void print(long number, byte decimalPlace, unsigned int Offset);
  void SetFontFG(byte R, byte G, byte B);
  void SetFontBG(byte R, byte G, byte B);
#endif
  void SetBG(byte R, byte G, byte B);
  void Refresh(void);
  
  private:
  void _SendByte(byte Data);
  void _ReverseArray(char Array[], byte size);
  void _CopyToBuffer(char Array[], int ArraySize, unsigned int Offset);

#ifdef DOTMATRIX
  byte _FontFGColour[3];
  byte _FontBGColour[3];
#endif
  byte _BGColour[3];
};

#endif